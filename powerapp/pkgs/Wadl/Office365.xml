<application xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:service="https://msmanaged-na.azure-apim.net/apim/office365" xmlns:siena="http://schemas.microsoft.com/MicrosoftProjectSiena/WADL/2014/11" siena:serviceId="Office365" xmlns="http://wadl.dev.java.net/2009/02">
  <doc title="Office365">Office 365 connector enables interaction with Office 365. For example: creating, editing, and updating contacts and calendar items.</doc>
  <grammars>
    <jsonTypes targetNamespace="https://msmanaged-na.azure-apim.net/apim/office365" xmlns="http://schemas.microsoft.com/MicrosoftProjectSiena/WADL/2014/11">
      <object name="TableMetadata">
        <property name="name" type="string" />
        <property name="title" type="string" />
        <property name="x-ms-permission" type="string" />
        <property name="x-ms-capabilities" typeRef="TableCapabilitiesMetadata" />
        <property name="schema" typeRef="Object" />
        <property name="referencedEntities" typeRef="Object" />
      </object>
      <array name="TableCapabilitiesMetadata_filterFunctionSupport_def" type="string" />
      <object name="TableCapabilitiesMetadata">
        <property name="sortRestrictions" typeRef="TableSortRestrictionsMetadata" />
        <property name="filterRestrictions" typeRef="TableFilterRestrictionsMetadata" />
        <property name="isOnlyServerPagable" type="boolean" />
        <property name="filterFunctionSupport" typeRef="TableCapabilitiesMetadata_filterFunctionSupport_def" />
      </object>
      <object name="Object" />
      <array name="TableSortRestrictionsMetadata_unsortableProperties_def" type="string" />
      <array name="TableSortRestrictionsMetadata_ascendingOnlyProperties_def" type="string" />
      <object name="TableSortRestrictionsMetadata">
        <property name="sortable" type="boolean" />
        <property name="unsortableProperties" typeRef="TableSortRestrictionsMetadata_unsortableProperties_def" />
        <property name="ascendingOnlyProperties" typeRef="TableSortRestrictionsMetadata_ascendingOnlyProperties_def" />
      </object>
      <array name="TableFilterRestrictionsMetadata_nonFilterableProperties_def" type="string" />
      <array name="TableFilterRestrictionsMetadata_requiredProperties_def" type="string" />
      <object name="TableFilterRestrictionsMetadata">
        <property name="filterable" type="boolean" />
        <property name="nonFilterableProperties" typeRef="TableFilterRestrictionsMetadata_nonFilterableProperties_def" />
        <property name="requiredProperties" typeRef="TableFilterRestrictionsMetadata_requiredProperties_def" />
      </object>
      <array name="CalendarEventList_value_def" typeRef="CalendarEventBackend" />
      <object name="CalendarEventList">
        <property name="value" typeRef="CalendarEventList_value_def" />
      </object>
      <array name="CalendarEventBackend_Attendees_def" typeRef="Attendee" />
      <array name="CalendarEventBackend_Categories_def" type="string" />
      <string name="CalendarEventBackend_DateTimeCreated_def" />
      <string name="CalendarEventBackend_DateTimeLastModified_def" />
      <string name="CalendarEventBackend_End_def" />
      <string name="CalendarEventBackend_Start_def" />
      <object name="CalendarEventBackend">
        <property name="Id" type="string" />
        <property name="Attendees" typeRef="CalendarEventBackend_Attendees_def" />
        <property name="Body" typeRef="ItemBody" />
        <property name="BodyPreview" type="string" />
        <property name="Categories" typeRef="CalendarEventBackend_Categories_def" />
        <property name="ChangeKey" type="string" />
        <property name="DateTimeCreated" typeRef="CalendarEventBackend_DateTimeCreated_def" />
        <property name="DateTimeLastModified" typeRef="CalendarEventBackend_DateTimeLastModified_def" />
        <property name="End" typeRef="CalendarEventBackend_End_def" />
        <property name="EndTimeZone" type="string" />
        <property name="HasAttachments" type="boolean" />
        <property name="Importance" type="string" />
        <property name="IsAllDay" type="boolean" />
        <property name="IsCancelled" type="boolean" />
        <property name="IsOrganizer" type="boolean" />
        <property name="Location" typeRef="Location" />
        <property name="Organizer" typeRef="Recipient" />
        <property name="Recurrence" typeRef="PatternedRecurrence" />
        <property name="Reminder" type="number" />
        <property name="ResponseRequested" type="boolean" />
        <property name="ResponseStatus" typeRef="ResponseStatus" />
        <property name="SeriesMasterId" type="string" />
        <property name="ShowAs" type="string" />
        <property name="Start" typeRef="CalendarEventBackend_Start_def" />
        <property name="StartTimeZone" type="string" />
        <property name="Subject" type="string" />
        <property name="Type" type="string" />
        <property name="WebLink" type="string" />
      </object>
      <object name="Attendee">
        <property name="Status" typeRef="ResponseStatus" />
        <property name="Type" type="string" />
        <property name="EmailAddress" typeRef="EmailAddress" />
      </object>
      <object name="ItemBody">
        <property name="ContentType" type="string" />
        <property name="Content" type="string" />
      </object>
      <object name="Location">
        <property name="DisplayName" type="string" />
        <property name="Address" typeRef="PhysicalAddress" />
        <property name="Coordinates" typeRef="GeoCoordinates" />
      </object>
      <object name="Recipient">
        <property name="EmailAddress" typeRef="EmailAddress" />
      </object>
      <object name="PatternedRecurrence">
        <property name="Pattern" typeRef="RecurrencePattern" />
        <property name="Range" typeRef="RecurrenceRange" />
      </object>
      <string name="ResponseStatus_Time_def" />
      <object name="ResponseStatus">
        <property name="Response" type="string" />
        <property name="Time" typeRef="ResponseStatus_Time_def" />
      </object>
      <object name="EmailAddress">
        <property name="Name" type="string" />
        <property name="Address" type="string" />
      </object>
      <object name="PhysicalAddress">
        <property name="Street" type="string" />
        <property name="City" type="string" />
        <property name="State" type="string" />
        <property name="CountryOrRegion" type="string" />
        <property name="PostalCode" type="string" />
      </object>
      <object name="GeoCoordinates">
        <property name="Altitude" type="number" />
        <property name="Latitude" type="number" />
        <property name="Longitude" type="number" />
        <property name="Accuracy" type="number" />
        <property name="AltitudeAccuracy" type="number" />
      </object>
      <array name="RecurrencePattern_DaysOfWeek_def" type="string" />
      <object name="RecurrencePattern">
        <property name="Type" type="string" />
        <property name="Interval" type="number" />
        <property name="Month" type="number" />
        <property name="DayOfMonth" type="number" />
        <property name="DaysOfWeek" typeRef="RecurrencePattern_DaysOfWeek_def" />
        <property name="FirstDayOfWeek" type="string" />
        <property name="Index" type="string" />
      </object>
      <string name="RecurrenceRange_StartDate_def" />
      <string name="RecurrenceRange_EndDate_def" />
      <object name="RecurrenceRange">
        <property name="Type" type="string" />
        <property name="StartDate" typeRef="RecurrenceRange_StartDate_def" />
        <property name="EndDate" typeRef="RecurrenceRange_EndDate_def" />
        <property name="NumberOfOccurrences" type="number" />
      </object>
      <array name="PaginatedListResponse_CalendarEventClientReceive__Values_def" typeRef="CalendarEventClientReceive" />
      <object name="PaginatedListResponse_CalendarEventClientReceive_">
        <property name="Values" typeRef="PaginatedListResponse_CalendarEventClientReceive__Values_def" />
        <property name="NextLink" type="string" />
      </object>
      <string name="CalendarEventClientReceive_DateTimeCreated_def" />
      <string name="CalendarEventClientReceive_DateTimeLastModified_def" />
      <string name="CalendarEventClientReceive_Start_def" />
      <string name="CalendarEventClientReceive_End_def" />
      <string name="CalendarEventClientReceive_RecurrenceEnd_def" />
      <object name="CalendarEventClientReceive">
        <property name="Id" type="string" />
        <property name="DateTimeCreated" typeRef="CalendarEventClientReceive_DateTimeCreated_def" />
        <property name="DateTimeLastModified" typeRef="CalendarEventClientReceive_DateTimeLastModified_def" />
        <property name="TimeZone" type="string" />
        <property name="Subject" type="string" />
        <property name="Start" typeRef="CalendarEventClientReceive_Start_def" />
        <property name="End" typeRef="CalendarEventClientReceive_End_def" />
        <property name="RequiredAttendees" type="string" />
        <property name="OptionalAttendees" type="string" />
        <property name="Body" type="string" />
        <property name="IsHtml" type="boolean" />
        <property name="Location" type="string" />
        <property name="Importance" type="string" />
        <property name="IsAllDay" type="boolean" />
        <property name="Recurrence" type="string" />
        <property name="RecurrenceEnd" typeRef="CalendarEventClientReceive_RecurrenceEnd_def" />
        <property name="NumberOfOccurrences" type="number" />
        <property name="Reminder" type="number" />
        <property name="ShowAs" type="string" />
        <property name="ResponseRequested" type="boolean" />
      </object>
      <array name="EntityListResponse_FilePickerFile__value_def" typeRef="FilePickerFile" />
      <object name="EntityListResponse_FilePickerFile_">
        <property name="value" typeRef="EntityListResponse_FilePickerFile__value_def" />
        <property name="@odata.nextLink" type="string" />
      </object>
      <object name="FilePickerFile">
        <property name="Id" type="string" />
        <property name="DisplayName" type="string" />
        <property name="IsFolder" type="boolean" />
        <property name="Path" type="string" />
      </object>
      <array name="SendMessage_Attachments_def" typeRef="SendAttachment" />
      <object name="SendMessage">
        <property name="From" type="string" />
        <property name="Cc" type="string" />
        <property name="Bcc" type="string" />
        <property name="To" type="string" />
        <property name="Subject" type="string" />
        <property name="Body" type="string" />
        <property name="Attachments" typeRef="SendMessage_Attachments_def" />
        <property name="Importance" type="string" />
        <property name="IsHtml" type="boolean" />
      </object>
      <base64Binary name="SendAttachment_ContentBytes_def" />
      <object name="SendAttachment">
        <property name="@odata.type" type="string" />
        <property name="Name" type="string" />
        <property name="ContentBytes" typeRef="SendAttachment_ContentBytes_def" />
      </object>
      <string name="ReceiveMessage_DateTimeReceived_def" />
      <array name="ReceiveMessage_Attachments_def" typeRef="ReceiveAttachment" />
      <object name="ReceiveMessage">
        <property name="From" type="string" />
        <property name="To" type="string" />
        <property name="Cc" type="string" />
        <property name="Bcc" type="string" />
        <property name="Subject" type="string" />
        <property name="Body" type="string" />
        <property name="Importance" type="string" />
        <property name="HasAttachment" type="boolean" />
        <property name="Id" type="string" />
        <property name="ConversationId" type="string" />
        <property name="DateTimeReceived" typeRef="ReceiveMessage_DateTimeReceived_def" />
        <property name="IsRead" type="boolean" />
        <property name="Attachments" typeRef="ReceiveMessage_Attachments_def" />
        <property name="IsHtml" type="boolean" />
      </object>
      <base64Binary name="ReceiveAttachment_ContentBytes_def" />
      <object name="ReceiveAttachment">
        <property name="Id" type="string" />
        <property name="ContentType" type="string" />
        <property name="Size" type="number" />
        <property name="@odata.type" type="string" />
        <property name="Name" type="string" />
        <property name="ContentBytes" typeRef="ReceiveAttachment_ContentBytes_def" />
      </object>
      <array name="TriggerBatchResponse_ReceiveMessage__value_def" typeRef="ReceiveMessage" />
      <object name="TriggerBatchResponse_ReceiveMessage_">
        <property name="value" typeRef="TriggerBatchResponse_ReceiveMessage__value_def" />
      </object>
      <object name="AutomaticRepliesSettingClient">
        <property name="Status" type="string" />
        <property name="ExternalAudience" type="string" />
        <property name="ScheduledStartDateTimeOffset" type="string" />
        <property name="ScheduledEndDateTimeOffset" type="string" />
        <property name="InternalReplyMessage" type="string" />
        <property name="ExternalReplyMessage" type="string" />
      </object>
      <object name="MailTipsClientReceive">
        <property name="AutomaticReplies" typeRef="MailTipsAutomaticReplies" />
        <property name="DeliveryRestricted" type="boolean" />
        <property name="ExternalMemberCount" type="number" />
        <property name="IsModerated" type="boolean" />
        <property name="MailboxFull" type="boolean" />
        <property name="MaxMessageSize" type="number" />
        <property name="TotalMemberCount" type="number" />
      </object>
      <object name="MailTipsAutomaticReplies">
        <property name="Message" type="string" />
      </object>
      <object name="DataSetsMetadata">
        <property name="tabular" typeRef="TabularDataSetsMetadata" />
        <property name="blob" typeRef="BlobDataSetsMetadata" />
      </object>
      <object name="TabularDataSetsMetadata">
        <property name="source" type="string" />
        <property name="displayName" type="string" />
        <property name="urlEncoding" type="string" />
        <property name="tableDisplayName" type="string" />
        <property name="tablePluralName" type="string" />
      </object>
      <object name="BlobDataSetsMetadata">
        <property name="source" type="string" />
        <property name="displayName" type="string" />
        <property name="urlEncoding" type="string" />
      </object>
      <object name="OptionsEmailSubscription">
        <property name="NotificationUrl" type="string" />
        <property name="Message" typeRef="MessageWithOptions" />
      </object>
      <array name="MessageWithOptions_Attachments_def" typeRef="SendAttachment" />
      <object name="MessageWithOptions">
        <property name="To" type="string" />
        <property name="Subject" type="string" />
        <property name="Options" type="string" />
        <property name="Body" type="string" />
        <property name="Importance" type="string" />
        <property name="Attachments" typeRef="MessageWithOptions_Attachments_def" />
      </object>
      <object name="SubscriptionResponse">
        <property name="id" type="string" />
        <property name="resource" type="string" />
        <property name="notificationType" type="string" />
        <property name="notificationUrl" type="string" />
      </object>
      <object name="ApprovalEmailResponse">
        <property name="SelectedOption" type="string" />
      </object>
      <object name="ApprovalEmailSubscription">
        <property name="NotificationUrl" type="string" />
        <property name="Message" typeRef="ApprovalMessage" />
      </object>
      <array name="ApprovalMessage_Attachments_def" typeRef="SendAttachment" />
      <object name="ApprovalMessage">
        <property name="To" type="string" />
        <property name="Subject" type="string" />
        <property name="Options" type="string" />
        <property name="Body" type="string" />
        <property name="Importance" type="string" />
        <property name="Attachments" typeRef="ApprovalMessage_Attachments_def" />
      </object>
      <array name="SharedMailboxSendMessage_Attachments_def" typeRef="SendAttachment" />
      <object name="SharedMailboxSendMessage">
        <property name="MailboxAddress" type="string" />
        <property name="To" type="string" />
        <property name="Subject" type="string" />
        <property name="Body" type="string" />
        <property name="Cc" type="string" />
        <property name="Bcc" type="string" />
        <property name="Attachments" typeRef="SharedMailboxSendMessage_Attachments_def" />
        <property name="Importance" type="string" />
        <property name="IsHtml" type="boolean" />
      </object>
      <array name="EntityListResponse_Table__value_def" typeRef="Table" />
      <object name="EntityListResponse_Table_">
        <property name="value" typeRef="EntityListResponse_Table__value_def" />
        <property name="@odata.nextLink" type="string" />
      </object>
      <object name="Table">
        <property name="Name" type="string" />
        <property name="DisplayName" type="string" />
      </object>
      <object name="Item">
        <property name="ItemInternalId" type="string" />
      </object>
      <array name="EntityListResponse_CalendarEventBackend__value_def" typeRef="CalendarEventBackend" />
      <object name="EntityListResponse_CalendarEventBackend_">
        <property name="value" typeRef="EntityListResponse_CalendarEventBackend__value_def" />
        <property name="@odata.nextLink" type="string" />
      </object>
      <array name="EntityListResponse_CalendarEventClientReceive__value_def" typeRef="CalendarEventClientReceive" />
      <object name="EntityListResponse_CalendarEventClientReceive_">
        <property name="value" typeRef="EntityListResponse_CalendarEventClientReceive__value_def" />
        <property name="@odata.nextLink" type="string" />
      </object>
      <string name="CalendarEventClient_Start_def" />
      <string name="CalendarEventClient_End_def" />
      <string name="CalendarEventClient_RecurrenceEnd_def" />
      <object name="CalendarEventClient">
        <property name="Subject" type="string" />
        <property name="Start" typeRef="CalendarEventClient_Start_def" />
        <property name="End" typeRef="CalendarEventClient_End_def" />
        <property name="TimeZone" type="string" />
        <property name="RequiredAttendees" type="string" />
        <property name="OptionalAttendees" type="string" />
        <property name="Body" type="string" />
        <property name="IsHtml" type="boolean" />
        <property name="Location" type="string" />
        <property name="Importance" type="string" />
        <property name="IsAllDay" type="boolean" />
        <property name="Recurrence" type="string" />
        <property name="RecurrenceEnd" typeRef="CalendarEventClient_RecurrenceEnd_def" />
        <property name="NumberOfOccurrences" type="number" />
        <property name="Reminder" type="number" />
        <property name="ShowAs" type="string" />
        <property name="ResponseRequested" type="boolean" />
      </object>
      <array name="CalendarEventListClientReceive_value_def" typeRef="CalendarEventClientReceive" />
      <object name="CalendarEventListClientReceive">
        <property name="value" typeRef="CalendarEventListClientReceive_value_def" />
      </object>
      <array name="ItemsList_value_def" typeRef="Item" />
      <object name="ItemsList">
        <property name="value" typeRef="ItemsList_value_def" />
      </object>
      <array name="EntityListResponse_Contact__value_def" typeRef="Contact" />
      <object name="EntityListResponse_Contact_">
        <property name="value" typeRef="EntityListResponse_Contact__value_def" />
        <property name="@odata.nextLink" type="string" />
      </object>
      <string name="Contact_Birthday_def" />
      <array name="Contact_EmailAddresses_def" typeRef="EmailAddress" />
      <array name="Contact_ImAddresses_def" type="string" />
      <array name="Contact_HomePhones_def" type="string" />
      <array name="Contact_BusinessPhones_def" type="string" />
      <array name="Contact_Categories_def" type="string" />
      <string name="Contact_DateTimeCreated_def" />
      <string name="Contact_DateTimeLastModified_def" />
      <object name="Contact">
        <property name="Id" type="string" />
        <property name="ParentFolderId" type="string" />
        <property name="Birthday" typeRef="Contact_Birthday_def" />
        <property name="FileAs" type="string" />
        <property name="DisplayName" type="string" />
        <property name="GivenName" type="string" />
        <property name="Initials" type="string" />
        <property name="MiddleName" type="string" />
        <property name="NickName" type="string" />
        <property name="Surname" type="string" />
        <property name="Title" type="string" />
        <property name="Generation" type="string" />
        <property name="EmailAddresses" typeRef="Contact_EmailAddresses_def" />
        <property name="ImAddresses" typeRef="Contact_ImAddresses_def" />
        <property name="JobTitle" type="string" />
        <property name="CompanyName" type="string" />
        <property name="Department" type="string" />
        <property name="OfficeLocation" type="string" />
        <property name="Profession" type="string" />
        <property name="BusinessHomePage" type="string" />
        <property name="AssistantName" type="string" />
        <property name="Manager" type="string" />
        <property name="HomePhones" typeRef="Contact_HomePhones_def" />
        <property name="BusinessPhones" typeRef="Contact_BusinessPhones_def" />
        <property name="MobilePhone1" type="string" />
        <property name="HomeAddress" typeRef="PhysicalAddress" />
        <property name="BusinessAddress" typeRef="PhysicalAddress" />
        <property name="OtherAddress" typeRef="PhysicalAddress" />
        <property name="YomiCompanyName" type="string" />
        <property name="YomiGivenName" type="string" />
        <property name="YomiSurname" type="string" />
        <property name="Categories" typeRef="Contact_Categories_def" />
        <property name="ChangeKey" type="string" />
        <property name="DateTimeCreated" typeRef="Contact_DateTimeCreated_def" />
        <property name="DateTimeLastModified" typeRef="Contact_DateTimeLastModified_def" />
      </object>
      <array name="DataSetsList_value_def" typeRef="DataSet" />
      <object name="DataSetsList">
        <property name="value" typeRef="DataSetsList_value_def" />
      </object>
      <object name="DataSet">
        <property name="Name" type="string" />
        <property name="DisplayName" type="string" />
      </object>
      <array name="GetEmails_response_200_def" typeRef="ReceiveMessage" />
      <string name="GetAttachment_response_200_def" />
      <string name="ReceiveResponseGet_response_200_def" />
      <string name="ReceiveResponsePost_response_200_def" />
    </jsonTypes>
    <sampleXmlTypes targetNamespace="https://msmanaged-na.azure-apim.net/apim/office365" xmlns="http://schemas.microsoft.com/MicrosoftProjectSiena/WADL/2014/11" />
  </grammars>
  <resources siena:authenticationProviderHref="#PowerAppAuth" base="https://msmanaged-na.azure-apim.net/apim/office365">
    <resource path="/{connectionId}/$metadata.json/datasets/calendars/tables/{table}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetTable">
        <doc title="Get calendar metadata&#xA;This operation gets metadata for a calendar." />
        <request />
        <response>
          <representation mediaType="application/json" element="service:TableMetadata" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/$metadata.json/datasets/contacts/tables/{table}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a contacts folder" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="ContactGetTable">
        <doc title="Get folder metadata&#xA;This operation gets metadata for a contacts folder." />
        <request />
        <response>
          <representation mediaType="application/json" element="service:TableMetadata" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/Events/OnUpcomingEvents">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="OnUpcomingEvents">
        <doc title="When an upcoming event is starting soon&#xA;This operation triggers a flow when an upcoming calendar event is starting." />
        <request>
          <param name="table" style="query" type="xs:string" required="true">
            <doc title="Unique identifier of the calendar" />
          </param>
          <param name="lookAheadTimeInMinutes" style="query" type="xs:int" default="15">
            <doc title="Time (in minutes) to look ahead for upcoming events" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/Events/CalendarView">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetEventsCalendarView">
        <doc title="Get calendar view of events&#xA;Get calendar view of events" />
        <request>
          <param name="calendarId" style="query" type="xs:string" required="true">
            <doc title="Select a calendar" />
          </param>
          <param name="startDateTimeOffset" style="query" type="xs:string" required="true">
            <doc title="Start time (example: '2017-01-01T08:00:00-07:00')" />
          </param>
          <param name="endDateTimeOffset" style="query" type="xs:string" required="true">
            <doc title="End time (example: '2017-02-01T08:00:00-07:00')" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:PaginatedListResponse_CalendarEventClientReceive_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/OnFilePickerOpen">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="OnFilePickerOpen">
        <doc title="When the file picker is opened for the first time&#xA;When the file picker is opened for the first time" />
        <request>
          <param name="operation" style="query" type="xs:string" required="true">
            <doc title="Name of the operation" />
          </param>
          <param name="top" style="query" type="xs:int" default="100">
            <doc title="Limit on the number of results to return" />
          </param>
          <param name="skip" style="query" type="xs:int" default="0">
            <doc title="Number of results to skip" />
          </param>
          <param name="mailboxAddress" style="query" type="xs:string" default="">
            <doc title="Mailbox to perform operations for" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_FilePickerFile_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/OnFilePickerBrowse">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="OnFilePickerBrowse">
        <doc title="When the file picker is open and being browsed&#xA;When the file picker is open and being browsed" />
        <request>
          <param name="operation" style="query" type="xs:string" required="true">
            <doc title="Name of the operation" />
          </param>
          <param name="id" style="query" type="xs:string" required="true">
            <doc title="Id of the previously selected item" />
          </param>
          <param name="top" style="query" type="xs:int" default="100">
            <doc title="Limit on the number of results to return" />
          </param>
          <param name="skip" style="query" type="xs:int" default="0">
            <doc title="Number of results to skip" />
          </param>
          <param name="mailboxAddress" style="query" type="xs:string" default="">
            <doc title="Mailbox to perform operations for" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_FilePickerFile_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/Mail">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetEmails">
        <doc title="Get emails&#xA;This operation gets emails from a folder." />
        <request>
          <param name="folderPath" style="query" type="xs:string" default="Inbox">
            <doc title="Mail folder to retrieve emails from (default: 'Inbox')" />
          </param>
          <param name="fetchOnlyUnread" style="query" type="xs:boolean" default="True">
            <doc title="Retrieve only unread emails?" />
          </param>
          <param name="includeAttachments" style="query" type="xs:boolean" default="False">
            <doc title="If set to true, attachments will also be retrieved along with the email" />
          </param>
          <param name="searchQuery" style="query" type="xs:string">
            <doc title="Search query (like in the Outlook client) to filter emails" />
          </param>
          <param name="top" style="query" type="xs:int" default="10">
            <doc title="Number of emails to retrieve (default: 10)" />
          </param>
          <param name="skip" style="query" type="xs:int" default="0">
            <doc title="Number of emails to skip (default: 0)" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:GetEmails_response_200_def" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="POST" id="SendEmail">
        <doc title="Send an email&#xA;This operation sends an email message." />
        <request>
          <representation mediaType="application/json">
            <param name="From" type="xs:string" style="plain" path="/From">
              <doc title="Email address to send mail from (requires &quot;Send as&quot; or &quot;Send on behalf of&quot; permission for that mailbox)" />
            </param>
            <param name="Cc" type="xs:string" style="plain" path="/Cc">
              <doc title="Specify email addresses separated by semicolons like someone@contoso.com" />
            </param>
            <param name="Bcc" type="xs:string" style="plain" path="/Bcc">
              <doc title="Specify email addresses separated by semicolons like someone@contoso.com" />
            </param>
            <param name="To" type="xs:string" style="plain" path="/To" required="true">
              <doc title="Specify email addresses separated by semicolons like someone@contoso.com" />
            </param>
            <param name="Subject" type="xs:string" style="plain" path="/Subject" required="true">
              <doc title="Specify the subject of the mail" />
            </param>
            <param name="Body" type="xs:string" style="plain" path="/Body" required="true">
              <doc title="Specify the body of the mail" />
            </param>
            <param name="Attachments" type="service:SendMessage_Attachments_def" style="plain" path="/Attachments">
              <doc title="Attachments" />
            </param>
            <param name="Importance" type="xs:string" style="plain" path="/Importance">
              <doc title="Importance" />
            </param>
            <param name="IsHtml" type="xs:boolean" style="plain" path="/IsHtml">
              <doc title="Is Html?" />
            </param>
          </representation>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/Move/{messageId}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="messageId" style="template" type="xs:string" required="true">
        <doc title="Id of the email to be moved" />
      </param>
      <method siena:requiresAuthentication="true" name="POST" id="Move">
        <doc title="Move email&#xA;This operation moves an email to the specified folder." />
        <request>
          <param name="folderPath" style="query" type="xs:string" required="true">
            <doc title="Mail folder to move the email to" />
          </param>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/Flag/{messageId}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="messageId" style="template" type="xs:string" required="true">
        <doc title="Id of the email to be flagged" />
      </param>
      <method siena:requiresAuthentication="true" name="POST" id="Flag">
        <doc title="Flag email&#xA;This operation flags an email." />
        <request />
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/{messageId}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="messageId" style="template" type="xs:string" required="true">
        <doc title="Id of the email to delete" />
      </param>
      <method siena:requiresAuthentication="true" name="DELETE" id="DeleteEmail">
        <doc title="Delete email&#xA;This operation deletes an email by id." />
        <request />
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/MarkAsRead/{messageId}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="messageId" style="template" type="xs:string" required="true">
        <doc title="Id of the email to be marked as read" />
      </param>
      <method siena:requiresAuthentication="true" name="POST" id="MarkAsRead">
        <doc title="Mark as read&#xA;This operation marks an email as having been read." />
        <request />
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/ReplyTo/{messageId}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="messageId" style="template" type="xs:string" required="true">
        <doc title="Id of the email to reply to" />
      </param>
      <method siena:requiresAuthentication="true" name="POST" id="ReplyTo">
        <doc title="Reply to email&#xA;This operation replies to an email." />
        <request>
          <param name="comment" style="query" type="xs:string" required="true">
            <doc title="Reply comment" />
          </param>
          <param name="replyAll" style="query" type="xs:boolean" default="False">
            <doc title="Reply to all recipients" />
          </param>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/{messageId}/Attachments/{attachmentId}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="messageId" style="template" type="xs:string" required="true">
        <doc title="Id of the email" />
      </param>
      <param name="attachmentId" style="template" type="xs:string" required="true">
        <doc title="Id of the attachment to download" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="GetAttachment">
        <doc title="Get attachment&#xA;This operation gets an email attachment by id." />
        <request />
        <response>
          <representation mediaType="application/octet-stream" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/OnNewEmail">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="OnNewEmail">
        <doc title="When a new email arrives&#xA;This operation triggers a flow when a new email arrives." />
        <request>
          <param name="folderPath" style="query" type="xs:string" default="Inbox">
            <doc title="Mail folder to check for new emails" />
          </param>
          <param name="to" style="query" type="xs:string">
            <doc title="Recipient email addresses (If any match, the trigger will run)" />
          </param>
          <param name="from" style="query" type="xs:string">
            <doc title="Sender email addresses (If any match, the trigger will run)" />
          </param>
          <param name="importance" style="query" type="xs:string" default="Any">
            <doc title="Importance of the email (Any, High, Normal, Low)" />
            <option value="Any" />
            <option value="Low" />
            <option value="Normal" />
            <option value="High" />
          </param>
          <param name="fetchOnlyWithAttachment" style="query" type="xs:boolean" default="False">
            <doc title="Should the email contain attachments" />
          </param>
          <param name="includeAttachments" style="query" type="xs:boolean" default="False">
            <doc title="Should the response of the trigger include the attachments" />
          </param>
          <param name="subjectFilter" style="query" type="xs:string">
            <doc title="String to look for in the subject line" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:TriggerBatchResponse_ReceiveMessage_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/Mail/OnFlaggedEmail">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="OnFlaggedEmail">
        <doc title="When an email is flagged&#xA;This operation triggers a flow when an email is flagged." />
        <request>
          <param name="folderPath" style="query" type="xs:string" default="Inbox">
            <doc title="Mail folder to check for new emails" />
          </param>
          <param name="to" style="query" type="xs:string">
            <doc title="Recipient email addresses (If any match, the trigger will run)" />
          </param>
          <param name="from" style="query" type="xs:string">
            <doc title="Sender email addresses (If any match, the trigger will run)" />
          </param>
          <param name="importance" style="query" type="xs:string" default="Any">
            <doc title="Importance of the email (Any, High, Normal, Low)" />
            <option value="Any" />
            <option value="Low" />
            <option value="Normal" />
            <option value="High" />
          </param>
          <param name="fetchOnlyWithAttachment" style="query" type="xs:boolean" default="False">
            <doc title="Should the email contain attachments" />
          </param>
          <param name="includeAttachments" style="query" type="xs:boolean" default="False">
            <doc title="Should the response of the trigger include the attachments" />
          </param>
          <param name="subjectFilter" style="query" type="xs:string">
            <doc title="String to look for in the subject line" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:TriggerBatchResponse_ReceiveMessage_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/AutomaticRepliesSetting">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="POST" id="SetAutomaticRepliesSetting">
        <doc title="Set up automatic replies&#xA;Set the automatic replies setting for your mailbox" />
        <request>
          <representation mediaType="application/json">
            <param name="Status" type="xs:string" style="plain" path="/Status" required="true">
              <doc title="Automatic reply setting status" />
            </param>
            <param name="ExternalAudience" type="xs:string" style="plain" path="/ExternalAudience" required="true">
              <doc title="The audience that will see the external reply message" />
            </param>
            <param name="ScheduledStartDateTimeOffset" type="xs:string" style="plain" path="/ScheduledStartDateTimeOffset">
              <doc title="Scheduled start time (example: '2016-11-01T15:30:00-00:00')" />
            </param>
            <param name="ScheduledEndDateTimeOffset" type="xs:string" style="plain" path="/ScheduledEndDateTimeOffset">
              <doc title="Scheduled end time (example: '2016-11-01T15:30:00-00:00')" />
            </param>
            <param name="InternalReplyMessage" type="xs:string" style="plain" path="/InternalReplyMessage">
              <doc title="Message for people within your organization" />
            </param>
            <param name="ExternalReplyMessage" type="xs:string" style="plain" path="/ExternalReplyMessage">
              <doc title="Message for people outside your organization" />
            </param>
          </representation>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/MailTips">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetMailTips">
        <doc title="Get mail tips for a mailbox&#xA;Get mail tips for a mailbox such as automatic replies / OOF message or if the mailbox is full" />
        <request>
          <param name="mailboxAddress" style="query" type="xs:string" required="true">
            <doc title="Address of the mailbox to get mail tips for" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:MailTipsClientReceive" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/$metadata.json/datasets">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetDataSetsMetadata">
        <doc />
        <request />
        <response>
          <representation mediaType="application/json" element="service:DataSetsMetadata" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/mailwithoptions/$subscriptions">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="POST" id="SendMailWithOptions">
        <doc title="Send email with options&#xA;This operation sends an email with multiple options and waits for the recipient to respond back with one of the options." />
        <request>
          <representation mediaType="application/json">
            <param name="NotificationUrl" type="xs:string" style="plain" path="/NotificationUrl">
              <doc title="Gets or sets callback url to flow engine. It is expected as part of request" />
            </param>
            <param name="Message" type="service:MessageWithOptions" style="plain" path="/Message">
              <doc title="Gets or sets Email Message with options" />
            </param>
          </representation>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/approvalmail/$subscriptions">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="POST" id="SendApprovalMail">
        <doc title="Send approval email&#xA;This operation sends an approval email and waits for a response from the recipient." />
        <request>
          <representation mediaType="application/json">
            <param name="NotificationUrl" type="xs:string" style="plain" path="/NotificationUrl">
              <doc title="Gets or sets callback url to flow engine. It is expected as part of request" />
            </param>
            <param name="Message" type="service:ApprovalMessage" style="plain" path="/Message" required="true">
              <doc title="Gets or sets Approval Message" />
            </param>
          </representation>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/approvalmail/$subscriptions/{id}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="id" style="template" type="xs:string" required="true">
        <doc title="Id of subscription to be deleted" />
      </param>
      <method siena:requiresAuthentication="true" name="DELETE" id="DeleteApprovalMailSubscription">
        <doc title="Delete approval email subscription&#xA;This operation deletes a subscription of approval email." />
        <request />
      </method>
    </resource>
    <resource path="/{connectionId}/mailwithoptions/$subscriptions/{id}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="id" style="template" type="xs:string" required="true">
        <doc title="Id of subscription to be deleted" />
      </param>
      <method siena:requiresAuthentication="true" name="DELETE" id="DeleteOptionsMailSubscription">
        <doc title="Delete options email subscription&#xA;This operation deletes a subscription of options email" />
        <request />
      </method>
    </resource>
    <resource path="/{connectionId}/SharedMailbox/Mail">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="POST" id="SharedMailboxSendEmail">
        <doc title="Send an email from a shared mailbox&#xA;This operation sends an email from a shared mailbox. Your account should have permission to access the mailbox for this operation to succeed." />
        <request>
          <representation mediaType="application/json">
            <param name="MailboxAddress" type="xs:string" style="plain" path="/MailboxAddress" required="true">
              <doc title="Specify email address of a shared mailbox like someone@contoso.com" />
            </param>
            <param name="To" type="xs:string" style="plain" path="/To" required="true">
              <doc title="Specify email addresses separated by semicolons like someone@contoso.com" />
            </param>
            <param name="Subject" type="xs:string" style="plain" path="/Subject" required="true">
              <doc title="Specify the subject of the mail" />
            </param>
            <param name="Body" type="xs:string" style="plain" path="/Body" required="true">
              <doc title="Specify the body of the mail" />
            </param>
            <param name="Cc" type="xs:string" style="plain" path="/Cc">
              <doc title="Specify email addresses separated by semicolons like someone@contoso.com" />
            </param>
            <param name="Bcc" type="xs:string" style="plain" path="/Bcc">
              <doc title="Specify email addresses separated by semicolons like someone@contoso.com" />
            </param>
            <param name="Attachments" type="service:SharedMailboxSendMessage_Attachments_def" style="plain" path="/Attachments">
              <doc title="Attachments" />
            </param>
            <param name="Importance" type="xs:string" style="plain" path="/Importance">
              <doc title="Importance" />
            </param>
            <param name="IsHtml" type="xs:boolean" style="plain" path="/IsHtml">
              <doc title="Is Html?" />
            </param>
          </representation>
        </request>
      </method>
    </resource>
    <resource path="/{connectionId}/SharedMailbox/Mail/OnNewEmail">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="SharedMailboxOnNewEmail">
        <doc title="When a new email arrives in a shared mailbox&#xA;This operation triggers a flow when a new email arrives in a shared mailbox. Your account should have permission to access the mailbox for this operation to succeed." />
        <request>
          <param name="mailboxAddress" style="query" type="xs:string" required="true">
            <doc title="Address of the shared mailbox" />
          </param>
          <param name="folderId" style="query" type="xs:string" default="Inbox">
            <doc title="Mail folder to check for new emails" />
          </param>
          <param name="to" style="query" type="xs:string">
            <doc title="Recipient email addresses (If any match, the trigger will run)" />
          </param>
          <param name="from" style="query" type="xs:string">
            <doc title="Sender email addresses (If any match, the trigger will run)" />
          </param>
          <param name="importance" style="query" type="xs:string" default="Any">
            <doc title="Importance of the email (Any, High, Normal, Low)" />
            <option value="Any" />
            <option value="Low" />
            <option value="Normal" />
            <option value="High" />
          </param>
          <param name="hasAttachments" style="query" type="xs:boolean" default="False">
            <doc title="Should the email contain attachments" />
          </param>
          <param name="includeAttachments" style="query" type="xs:boolean" default="False">
            <doc title="Should the response of the trigger include the attachments" />
          </param>
          <param name="subjectFilter" style="query" type="xs:string">
            <doc title="String to look for in the subject line" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:TriggerBatchResponse_ReceiveMessage_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/testconnection">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="TestConnection">
        <doc title="Tests the connection&#xA;Tests the connection" />
        <request />
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/tables">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetTables">
        <doc title="Get calendars&#xA;This operation lists available calendars." />
        <request />
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_Table_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/tables/{table}/items">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetItems">
        <doc title="Get events (V1)&#xA;This operation gets events from a calendar. (V1)" />
        <request>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_CalendarEventBackend_" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="POST" id="CalendarPostItem">
        <doc title="Create event (V1)&#xA;This operation creates a new event in a calendar. (V1)" />
        <request>
          <representation mediaType="application/json">
            <param name="Id" type="xs:string" style="plain" path="/Id">
              <doc title="The Event's unique identifier" />
            </param>
            <param name="Attendees" type="service:CalendarEventBackend_Attendees_def" style="plain" path="/Attendees">
              <doc title="List of attendees for the event" />
            </param>
            <param name="Body" type="service:ItemBody" style="plain" path="/Body">
              <doc title="The body of the message associated with the event" />
            </param>
            <param name="BodyPreview" type="xs:string" style="plain" path="/BodyPreview">
              <doc title="The preview of the message associated with the event" />
            </param>
            <param name="Categories" type="service:CalendarEventBackend_Categories_def" style="plain" path="/Categories">
              <doc title="The categories associated with the event" />
            </param>
            <param name="ChangeKey" type="xs:string" style="plain" path="/ChangeKey">
              <doc title="This property identifies the version of the event object. Every time the event is changed, ChangeKey changes as well." />
            </param>
            <param name="DateTimeCreated" type="service:CalendarEventBackend_DateTimeCreated_def" style="plain" path="/DateTimeCreated">
              <doc title="The date and time that the event was created" />
            </param>
            <param name="DateTimeLastModified" type="service:CalendarEventBackend_DateTimeLastModified_def" style="plain" path="/DateTimeLastModified">
              <doc title="The date and time that the event was last modified" />
            </param>
            <param name="End" type="service:CalendarEventBackend_End_def" style="plain" path="/End" required="true">
              <doc title="The end time of the event" />
            </param>
            <param name="EndTimeZone" type="xs:string" style="plain" path="/EndTimeZone">
              <doc title="This property specifies the time zone of the meeting end time. The value must be as defined in Windows (example: 'Pacific Standard Time')." />
            </param>
            <param name="HasAttachments" type="xs:boolean" style="plain" path="/HasAttachments">
              <doc title="Set to true if the event has attachments" />
            </param>
            <param name="Importance" type="xs:string" style="plain" path="/Importance">
              <doc title="The importance of the event: Low, Normal, or High" />
            </param>
            <param name="IsAllDay" type="xs:boolean" style="plain" path="/IsAllDay">
              <doc title="Set to true if the event lasts all day" />
            </param>
            <param name="IsCancelled" type="xs:boolean" style="plain" path="/IsCancelled">
              <doc title="Set to true if the event has been canceled" />
            </param>
            <param name="IsOrganizer" type="xs:boolean" style="plain" path="/IsOrganizer">
              <doc title="Set to true if the message sender is also the organizer" />
            </param>
            <param name="Location" type="service:Location" style="plain" path="/Location">
              <doc title="The location of the event" />
            </param>
            <param name="Organizer" type="service:Recipient" style="plain" path="/Organizer">
              <doc title="The organizer of the event" />
            </param>
            <param name="Recurrence" type="service:PatternedRecurrence" style="plain" path="/Recurrence">
              <doc title="The recurrence pattern for the event" />
            </param>
            <param name="Reminder" type="xs:int" style="plain" path="/Reminder">
              <doc title="Time in minutes before event start to remind" />
            </param>
            <param name="ResponseRequested" type="xs:boolean" style="plain" path="/ResponseRequested">
              <doc title="Set to true if the sender would like a response when the event is accepted or declined" />
            </param>
            <param name="ResponseStatus" type="service:ResponseStatus" style="plain" path="/ResponseStatus">
              <doc title="Indicates the type of response sent in response to an event message" />
            </param>
            <param name="SeriesMasterId" type="xs:string" style="plain" path="/SeriesMasterId">
              <doc title="Unique identifier for Series Master event type" />
            </param>
            <param name="ShowAs" type="xs:string" style="plain" path="/ShowAs">
              <doc title="Shows as free or busy" />
            </param>
            <param name="Start" type="service:CalendarEventBackend_Start_def" style="plain" path="/Start" required="true">
              <doc title="The start time of the event" />
            </param>
            <param name="StartTimeZone" type="xs:string" style="plain" path="/StartTimeZone">
              <doc title="This property specifies the time zone of the meeting start time. The value must be as defined in Windows (example: 'Pacific Standard Time')." />
            </param>
            <param name="Subject" type="xs:string" style="plain" path="/Subject" required="true">
              <doc title="Event subject" />
            </param>
            <param name="Type" type="xs:string" style="plain" path="/Type">
              <doc title="The event type: Single Instance, Occurrence, Exception, or Series Master" />
            </param>
            <param name="WebLink" type="xs:string" style="plain" path="/WebLink">
              <doc title="The preview of the message associated with the event" />
            </param>
          </representation>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventBackend" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/tables/{table}/items/{id}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <param name="id" style="template" type="xs:string" required="true">
        <doc title="Select an event" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetItem">
        <doc title="Get event (V1)&#xA;This operation gets a specific event from a calendar. (V1)" />
        <request />
        <response>
          <representation mediaType="application/json" element="service:CalendarEventBackend" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="DELETE" id="CalendarDeleteItem">
        <doc title="Delete event&#xA;This operation deletes an event in a calendar." />
        <request />
      </method>
      <method siena:requiresAuthentication="true" name="PATCH" id="CalendarPatchItem">
        <doc title="Update event (V1)&#xA;This operation updates an event in a calendar. (V1)" />
        <request>
          <representation mediaType="application/json">
            <param name="Id" type="xs:string" style="plain" path="/Id">
              <doc title="The Event's unique identifier" />
            </param>
            <param name="Attendees" type="service:CalendarEventBackend_Attendees_def" style="plain" path="/Attendees">
              <doc title="List of attendees for the event" />
            </param>
            <param name="Body" type="service:ItemBody" style="plain" path="/Body">
              <doc title="The body of the message associated with the event" />
            </param>
            <param name="BodyPreview" type="xs:string" style="plain" path="/BodyPreview">
              <doc title="The preview of the message associated with the event" />
            </param>
            <param name="Categories" type="service:CalendarEventBackend_Categories_def" style="plain" path="/Categories">
              <doc title="The categories associated with the event" />
            </param>
            <param name="ChangeKey" type="xs:string" style="plain" path="/ChangeKey">
              <doc title="This property identifies the version of the event object. Every time the event is changed, ChangeKey changes as well." />
            </param>
            <param name="DateTimeCreated" type="service:CalendarEventBackend_DateTimeCreated_def" style="plain" path="/DateTimeCreated">
              <doc title="The date and time that the event was created" />
            </param>
            <param name="DateTimeLastModified" type="service:CalendarEventBackend_DateTimeLastModified_def" style="plain" path="/DateTimeLastModified">
              <doc title="The date and time that the event was last modified" />
            </param>
            <param name="End" type="service:CalendarEventBackend_End_def" style="plain" path="/End" required="true">
              <doc title="The end time of the event" />
            </param>
            <param name="EndTimeZone" type="xs:string" style="plain" path="/EndTimeZone">
              <doc title="This property specifies the time zone of the meeting end time. The value must be as defined in Windows (example: 'Pacific Standard Time')." />
            </param>
            <param name="HasAttachments" type="xs:boolean" style="plain" path="/HasAttachments">
              <doc title="Set to true if the event has attachments" />
            </param>
            <param name="Importance" type="xs:string" style="plain" path="/Importance">
              <doc title="The importance of the event: Low, Normal, or High" />
            </param>
            <param name="IsAllDay" type="xs:boolean" style="plain" path="/IsAllDay">
              <doc title="Set to true if the event lasts all day" />
            </param>
            <param name="IsCancelled" type="xs:boolean" style="plain" path="/IsCancelled">
              <doc title="Set to true if the event has been canceled" />
            </param>
            <param name="IsOrganizer" type="xs:boolean" style="plain" path="/IsOrganizer">
              <doc title="Set to true if the message sender is also the organizer" />
            </param>
            <param name="Location" type="service:Location" style="plain" path="/Location">
              <doc title="The location of the event" />
            </param>
            <param name="Organizer" type="service:Recipient" style="plain" path="/Organizer">
              <doc title="The organizer of the event" />
            </param>
            <param name="Recurrence" type="service:PatternedRecurrence" style="plain" path="/Recurrence">
              <doc title="The recurrence pattern for the event" />
            </param>
            <param name="Reminder" type="xs:int" style="plain" path="/Reminder">
              <doc title="Time in minutes before event start to remind" />
            </param>
            <param name="ResponseRequested" type="xs:boolean" style="plain" path="/ResponseRequested">
              <doc title="Set to true if the sender would like a response when the event is accepted or declined" />
            </param>
            <param name="ResponseStatus" type="service:ResponseStatus" style="plain" path="/ResponseStatus">
              <doc title="Indicates the type of response sent in response to an event message" />
            </param>
            <param name="SeriesMasterId" type="xs:string" style="plain" path="/SeriesMasterId">
              <doc title="Unique identifier for Series Master event type" />
            </param>
            <param name="ShowAs" type="xs:string" style="plain" path="/ShowAs">
              <doc title="Shows as free or busy" />
            </param>
            <param name="Start" type="service:CalendarEventBackend_Start_def" style="plain" path="/Start" required="true">
              <doc title="The start time of the event" />
            </param>
            <param name="StartTimeZone" type="xs:string" style="plain" path="/StartTimeZone">
              <doc title="This property specifies the time zone of the meeting start time. The value must be as defined in Windows (example: 'Pacific Standard Time')." />
            </param>
            <param name="Subject" type="xs:string" style="plain" path="/Subject" required="true">
              <doc title="Event subject" />
            </param>
            <param name="Type" type="xs:string" style="plain" path="/Type">
              <doc title="The event type: Single Instance, Occurrence, Exception, or Series Master" />
            </param>
            <param name="WebLink" type="xs:string" style="plain" path="/WebLink">
              <doc title="The preview of the message associated with the event" />
            </param>
          </representation>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventBackend" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/v2/tables/{table}/items">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="V2CalendarGetItems">
        <doc title="Get events (V2)&#xA;This operation gets events from a calendar. (V2)" />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_CalendarEventClientReceive_" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="POST" id="V2CalendarPostItem">
        <doc title="Create event (V2)&#xA;This operation creates a new event in a calendar. (V2)" />
        <request>
          <representation mediaType="application/json">
            <param name="Subject" type="xs:string" style="plain" path="/Subject" required="true">
              <doc title="Event subject" />
            </param>
            <param name="Start" type="service:CalendarEventClient_Start_def" style="plain" path="/Start" required="true">
              <doc title="Start time of the event (example: '2016-11-01T14:30:00')" />
            </param>
            <param name="End" type="service:CalendarEventClient_End_def" style="plain" path="/End" required="true">
              <doc title="End time of the event (example: '2016-11-01T15:30:00')" />
            </param>
            <param name="TimeZone" type="xs:string" style="plain" path="/TimeZone">
              <doc title="Time zone of the event" />
            </param>
            <param name="RequiredAttendees" type="xs:string" style="plain" path="/RequiredAttendees">
              <doc title="Required attendees for the event" />
            </param>
            <param name="OptionalAttendees" type="xs:string" style="plain" path="/OptionalAttendees">
              <doc title="Optional attendees for the event" />
            </param>
            <param name="Body" type="xs:string" style="plain" path="/Body">
              <doc title="Body of the message associated with the event" />
            </param>
            <param name="IsHtml" type="xs:boolean" style="plain" path="/IsHtml">
              <doc title="Set to true if the body is Html" />
            </param>
            <param name="Location" type="xs:string" style="plain" path="/Location">
              <doc title="Location of the event" />
            </param>
            <param name="Importance" type="xs:string" style="plain" path="/Importance">
              <doc title="The importance of the event: Low, Normal, or High" />
            </param>
            <param name="IsAllDay" type="xs:boolean" style="plain" path="/IsAllDay">
              <doc title="Set to true if the event lasts all day" />
            </param>
            <param name="Recurrence" type="xs:string" style="plain" path="/Recurrence">
              <doc title="The recurrence pattern for the event" />
            </param>
            <param name="RecurrenceEnd" type="service:CalendarEventClient_RecurrenceEnd_def" style="plain" path="/RecurrenceEnd">
              <doc title="End time of the recurrence" />
            </param>
            <param name="NumberOfOccurrences" type="xs:int" style="plain" path="/NumberOfOccurrences">
              <doc title="How many times to repeat the event" />
            </param>
            <param name="Reminder" type="xs:int" style="plain" path="/Reminder">
              <doc title="Time in minutes before event start to remind" />
            </param>
            <param name="ShowAs" type="xs:string" style="plain" path="/ShowAs">
              <doc title="Status to show during the event" />
            </param>
            <param name="ResponseRequested" type="xs:boolean" style="plain" path="/ResponseRequested">
              <doc title="Set to true if the sender would like a response when the event is accepted or declined" />
            </param>
          </representation>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventClientReceive" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/v2/tables/items/calendarview">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetEventsCalendarViewV2">
        <doc title="Get calendar view of events (V2)&#xA;This operation gets all events (including instances of recurrences) in a calendar. (V2)" />
        <request>
          <param name="calendarId" style="query" type="xs:string" required="true">
            <doc title="Select a calendar" />
          </param>
          <param name="startDateTimeOffset" style="query" type="xs:string" required="true">
            <doc title="Start time (example: '2017-01-01T08:00:00-07:00')" />
          </param>
          <param name="endDateTimeOffset" style="query" type="xs:string" required="true">
            <doc title="End time (example: '2017-02-01T08:00:00-07:00')" />
          </param>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_CalendarEventClientReceive_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/v2/tables/{table}/items/{id}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <param name="id" style="template" type="xs:string" required="true">
        <doc title="Select an event" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="V2CalendarGetItem">
        <doc title="Get event (V2)&#xA;This operation gets a specific event from a calendar. (V2)" />
        <request />
        <response>
          <representation mediaType="application/json" element="service:CalendarEventClientReceive" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="PATCH" id="V2CalendarPatchItem">
        <doc title="Update event (V2)&#xA;This operation updates an event in a calendar. (V2)" />
        <request>
          <representation mediaType="application/json">
            <param name="Subject" type="xs:string" style="plain" path="/Subject" required="true">
              <doc title="Event subject" />
            </param>
            <param name="Start" type="service:CalendarEventClient_Start_def" style="plain" path="/Start" required="true">
              <doc title="Start time of the event (example: '2016-11-01T14:30:00')" />
            </param>
            <param name="End" type="service:CalendarEventClient_End_def" style="plain" path="/End" required="true">
              <doc title="End time of the event (example: '2016-11-01T15:30:00')" />
            </param>
            <param name="TimeZone" type="xs:string" style="plain" path="/TimeZone">
              <doc title="Time zone of the event" />
            </param>
            <param name="RequiredAttendees" type="xs:string" style="plain" path="/RequiredAttendees">
              <doc title="Required attendees for the event" />
            </param>
            <param name="OptionalAttendees" type="xs:string" style="plain" path="/OptionalAttendees">
              <doc title="Optional attendees for the event" />
            </param>
            <param name="Body" type="xs:string" style="plain" path="/Body">
              <doc title="Body of the message associated with the event" />
            </param>
            <param name="IsHtml" type="xs:boolean" style="plain" path="/IsHtml">
              <doc title="Set to true if the body is Html" />
            </param>
            <param name="Location" type="xs:string" style="plain" path="/Location">
              <doc title="Location of the event" />
            </param>
            <param name="Importance" type="xs:string" style="plain" path="/Importance">
              <doc title="The importance of the event: Low, Normal, or High" />
            </param>
            <param name="IsAllDay" type="xs:boolean" style="plain" path="/IsAllDay">
              <doc title="Set to true if the event lasts all day" />
            </param>
            <param name="Recurrence" type="xs:string" style="plain" path="/Recurrence">
              <doc title="The recurrence pattern for the event" />
            </param>
            <param name="RecurrenceEnd" type="service:CalendarEventClient_RecurrenceEnd_def" style="plain" path="/RecurrenceEnd">
              <doc title="End time of the recurrence" />
            </param>
            <param name="NumberOfOccurrences" type="xs:int" style="plain" path="/NumberOfOccurrences">
              <doc title="How many times to repeat the event" />
            </param>
            <param name="Reminder" type="xs:int" style="plain" path="/Reminder">
              <doc title="Time in minutes before event start to remind" />
            </param>
            <param name="ShowAs" type="xs:string" style="plain" path="/ShowAs">
              <doc title="Status to show during the event" />
            </param>
            <param name="ResponseRequested" type="xs:boolean" style="plain" path="/ResponseRequested">
              <doc title="Set to true if the sender would like a response when the event is accepted or declined" />
            </param>
          </representation>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventClientReceive" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/tables/{table}/onnewitems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetOnNewItems">
        <doc title="When a new event is created (V1)&#xA;This operation triggers a flow when a new event is created in a calendar. (V1)" />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/tables/{table}/onupdateditems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetOnUpdatedItems">
        <doc title="When an event is modified (V1)&#xA;This operation triggers a flow when an event is modified in a calendar. (V1)" />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets({dataset})/tables({table})/onnewitems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="dataset" style="template" type="xs:string" required="true">
        <doc title="dataset name" />
      </param>
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="table name" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="ODataStyleGetOnNewItems">
        <doc title="When a new item is created in a table&#xA;This operation triggers a flow when a new item is created in a table." />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets({dataset})/tables({table})/onupdateditems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="dataset" style="template" type="xs:string" required="true">
        <doc title="dataset name" />
      </param>
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="table name" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="ODataStyleCalendarGetOnUpdatedItems">
        <doc title="When an item is modified&#xA;This operation triggers a flow when an item is modified in a table." />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/v2/tables/{table}/onnewitems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetOnNewItemsV2">
        <doc title="When a new event is created (V2)&#xA;This operation triggers a flow when a new event is created in a calendar. (V2)" />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventListClientReceive" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/calendars/v2/tables/{table}/onupdateditems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a calendar" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="CalendarGetOnUpdatedItemsV2">
        <doc title="When an event is modified (V2)&#xA;This operation triggers a flow when an event is modified in a calendar. (V2)" />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:CalendarEventListClientReceive" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/{dataset}/tables/{table}/ondeleteditems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="dataset" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetOnDeletedItems">
        <doc />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:ItemsList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets({dataset})/tables({table})/ondeleteditems">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="dataset" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="ODataStyleGetOnDeletedItems">
        <doc />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:ItemsList" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/contacts/tables">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="ContactGetTables">
        <doc title="Get contact folders&#xA;This operation lists available contacts folders." />
        <request />
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_Table_" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/contacts/tables/{table}/items">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Unique identifier of the contacts folder to retrieve" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="ContactGetItems">
        <doc title="Get contacts&#xA;This operation gets contacts from a contacts folder." />
        <request>
          <param name="$filter" style="query" type="xs:string">
            <doc title="An ODATA filter query to restrict the entries returned." />
          </param>
          <param name="$orderby" style="query" type="xs:string">
            <doc title="An ODATA orderBy query for specifying the order of entries." />
          </param>
          <param name="$top" style="query" type="xs:int">
            <doc title="Total number of entries to retrieve (default = all)." />
          </param>
          <param name="$skip" style="query" type="xs:int">
            <doc title="The number of entries to skip (default = 0)." />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="service:EntityListResponse_Contact_" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="POST" id="ContactPostItem">
        <doc title="Create contact&#xA;This operation creates a new contact in a contacts folder." />
        <request>
          <representation mediaType="application/json">
            <param name="Id" type="xs:string" style="plain" path="/Id">
              <doc title="The contact's unique identifier." />
            </param>
            <param name="ParentFolderId" type="xs:string" style="plain" path="/ParentFolderId">
              <doc title="The ID of the contact's parent folder" />
            </param>
            <param name="Birthday" type="service:Contact_Birthday_def" style="plain" path="/Birthday">
              <doc title="The contact's birthday" />
            </param>
            <param name="FileAs" type="xs:string" style="plain" path="/FileAs">
              <doc title="The name the contact is filed under" />
            </param>
            <param name="DisplayName" type="xs:string" style="plain" path="/DisplayName">
              <doc title="The contact's display name" />
            </param>
            <param name="GivenName" type="xs:string" style="plain" path="/GivenName" required="true">
              <doc title="The contact's given name" />
            </param>
            <param name="Initials" type="xs:string" style="plain" path="/Initials">
              <doc title="The contact's initials" />
            </param>
            <param name="MiddleName" type="xs:string" style="plain" path="/MiddleName">
              <doc title="The contact's middle name" />
            </param>
            <param name="NickName" type="xs:string" style="plain" path="/NickName">
              <doc title="The contact's nickname" />
            </param>
            <param name="Surname" type="xs:string" style="plain" path="/Surname">
              <doc title="The contact's surname" />
            </param>
            <param name="Title" type="xs:string" style="plain" path="/Title">
              <doc title="The contact's title" />
            </param>
            <param name="Generation" type="xs:string" style="plain" path="/Generation">
              <doc title="The contact's generation" />
            </param>
            <param name="EmailAddresses" type="service:Contact_EmailAddresses_def" style="plain" path="/EmailAddresses">
              <doc title="The contact's email addresses" />
            </param>
            <param name="ImAddresses" type="service:Contact_ImAddresses_def" style="plain" path="/ImAddresses">
              <doc title="The contact's instant messaging (IM) addresses" />
            </param>
            <param name="JobTitle" type="xs:string" style="plain" path="/JobTitle">
              <doc title="The contact's job title" />
            </param>
            <param name="CompanyName" type="xs:string" style="plain" path="/CompanyName">
              <doc title="The name of the contact's company" />
            </param>
            <param name="Department" type="xs:string" style="plain" path="/Department">
              <doc title="The contact's department" />
            </param>
            <param name="OfficeLocation" type="xs:string" style="plain" path="/OfficeLocation">
              <doc title="The location of the contact's office" />
            </param>
            <param name="Profession" type="xs:string" style="plain" path="/Profession">
              <doc title="The contact's profession" />
            </param>
            <param name="BusinessHomePage" type="xs:string" style="plain" path="/BusinessHomePage">
              <doc title="The business home page of the contact" />
            </param>
            <param name="AssistantName" type="xs:string" style="plain" path="/AssistantName">
              <doc title="The name of the contact's assistant" />
            </param>
            <param name="Manager" type="xs:string" style="plain" path="/Manager">
              <doc title="The name of the contact's manager" />
            </param>
            <param name="HomePhones" type="service:Contact_HomePhones_def" style="plain" path="/HomePhones" required="true">
              <doc title="The contact's home phone numbers" />
            </param>
            <param name="BusinessPhones" type="service:Contact_BusinessPhones_def" style="plain" path="/BusinessPhones">
              <doc title="The contact's business phone numbers" />
            </param>
            <param name="MobilePhone1" type="xs:string" style="plain" path="/MobilePhone1">
              <doc title="The contact's mobile phone number" />
            </param>
            <param name="HomeAddress" type="service:PhysicalAddress" style="plain" path="/HomeAddress">
              <doc title="The contact's home address" />
            </param>
            <param name="BusinessAddress" type="service:PhysicalAddress" style="plain" path="/BusinessAddress">
              <doc title="The contact's business address" />
            </param>
            <param name="OtherAddress" type="service:PhysicalAddress" style="plain" path="/OtherAddress">
              <doc title="Other addresses for the contact" />
            </param>
            <param name="YomiCompanyName" type="xs:string" style="plain" path="/YomiCompanyName">
              <doc title="The phonetic Japanese company name of the contact" />
            </param>
            <param name="YomiGivenName" type="xs:string" style="plain" path="/YomiGivenName">
              <doc title="The phonetic Japanese given name (first name) of the contact" />
            </param>
            <param name="YomiSurname" type="xs:string" style="plain" path="/YomiSurname">
              <doc title="The phonetic Japanese surname (last name) of the contact" />
            </param>
            <param name="Categories" type="service:Contact_Categories_def" style="plain" path="/Categories">
              <doc title="The categories associated with the contact" />
            </param>
            <param name="ChangeKey" type="xs:string" style="plain" path="/ChangeKey">
              <doc title="Identifies the version of the event object" />
            </param>
            <param name="DateTimeCreated" type="service:Contact_DateTimeCreated_def" style="plain" path="/DateTimeCreated">
              <doc title="The time the contact was created" />
            </param>
            <param name="DateTimeLastModified" type="service:Contact_DateTimeLastModified_def" style="plain" path="/DateTimeLastModified">
              <doc title="The time the contact was modified" />
            </param>
          </representation>
        </request>
        <response>
          <representation mediaType="application/json" element="service:Contact" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets/contacts/tables/{table}/items/{id}">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <param name="table" style="template" type="xs:string" required="true">
        <doc title="Select a contacts folder" />
      </param>
      <param name="id" style="template" type="xs:string" required="true">
        <doc title="Unique identifier of a contact to retrieve" />
      </param>
      <method siena:requiresAuthentication="true" name="GET" id="ContactGetItem">
        <doc title="Get contact&#xA;This operation gets a specific contact from a contacts folder." />
        <request />
        <response>
          <representation mediaType="application/json" element="service:Contact" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="DELETE" id="ContactDeleteItem">
        <doc title="Delete contact&#xA;This operation deletes a contact from a contacts folder." />
        <request />
      </method>
      <method siena:requiresAuthentication="true" name="PATCH" id="ContactPatchItem">
        <doc title="Update contact&#xA;This operation updates a contact in a contacts folder." />
        <request>
          <representation mediaType="application/json">
            <param name="Id" type="xs:string" style="plain" path="/Id">
              <doc title="The contact's unique identifier." />
            </param>
            <param name="ParentFolderId" type="xs:string" style="plain" path="/ParentFolderId">
              <doc title="The ID of the contact's parent folder" />
            </param>
            <param name="Birthday" type="service:Contact_Birthday_def" style="plain" path="/Birthday">
              <doc title="The contact's birthday" />
            </param>
            <param name="FileAs" type="xs:string" style="plain" path="/FileAs">
              <doc title="The name the contact is filed under" />
            </param>
            <param name="DisplayName" type="xs:string" style="plain" path="/DisplayName">
              <doc title="The contact's display name" />
            </param>
            <param name="GivenName" type="xs:string" style="plain" path="/GivenName" required="true">
              <doc title="The contact's given name" />
            </param>
            <param name="Initials" type="xs:string" style="plain" path="/Initials">
              <doc title="The contact's initials" />
            </param>
            <param name="MiddleName" type="xs:string" style="plain" path="/MiddleName">
              <doc title="The contact's middle name" />
            </param>
            <param name="NickName" type="xs:string" style="plain" path="/NickName">
              <doc title="The contact's nickname" />
            </param>
            <param name="Surname" type="xs:string" style="plain" path="/Surname">
              <doc title="The contact's surname" />
            </param>
            <param name="Title" type="xs:string" style="plain" path="/Title">
              <doc title="The contact's title" />
            </param>
            <param name="Generation" type="xs:string" style="plain" path="/Generation">
              <doc title="The contact's generation" />
            </param>
            <param name="EmailAddresses" type="service:Contact_EmailAddresses_def" style="plain" path="/EmailAddresses">
              <doc title="The contact's email addresses" />
            </param>
            <param name="ImAddresses" type="service:Contact_ImAddresses_def" style="plain" path="/ImAddresses">
              <doc title="The contact's instant messaging (IM) addresses" />
            </param>
            <param name="JobTitle" type="xs:string" style="plain" path="/JobTitle">
              <doc title="The contact's job title" />
            </param>
            <param name="CompanyName" type="xs:string" style="plain" path="/CompanyName">
              <doc title="The name of the contact's company" />
            </param>
            <param name="Department" type="xs:string" style="plain" path="/Department">
              <doc title="The contact's department" />
            </param>
            <param name="OfficeLocation" type="xs:string" style="plain" path="/OfficeLocation">
              <doc title="The location of the contact's office" />
            </param>
            <param name="Profession" type="xs:string" style="plain" path="/Profession">
              <doc title="The contact's profession" />
            </param>
            <param name="BusinessHomePage" type="xs:string" style="plain" path="/BusinessHomePage">
              <doc title="The business home page of the contact" />
            </param>
            <param name="AssistantName" type="xs:string" style="plain" path="/AssistantName">
              <doc title="The name of the contact's assistant" />
            </param>
            <param name="Manager" type="xs:string" style="plain" path="/Manager">
              <doc title="The name of the contact's manager" />
            </param>
            <param name="HomePhones" type="service:Contact_HomePhones_def" style="plain" path="/HomePhones" required="true">
              <doc title="The contact's home phone numbers" />
            </param>
            <param name="BusinessPhones" type="service:Contact_BusinessPhones_def" style="plain" path="/BusinessPhones">
              <doc title="The contact's business phone numbers" />
            </param>
            <param name="MobilePhone1" type="xs:string" style="plain" path="/MobilePhone1">
              <doc title="The contact's mobile phone number" />
            </param>
            <param name="HomeAddress" type="service:PhysicalAddress" style="plain" path="/HomeAddress">
              <doc title="The contact's home address" />
            </param>
            <param name="BusinessAddress" type="service:PhysicalAddress" style="plain" path="/BusinessAddress">
              <doc title="The contact's business address" />
            </param>
            <param name="OtherAddress" type="service:PhysicalAddress" style="plain" path="/OtherAddress">
              <doc title="Other addresses for the contact" />
            </param>
            <param name="YomiCompanyName" type="xs:string" style="plain" path="/YomiCompanyName">
              <doc title="The phonetic Japanese company name of the contact" />
            </param>
            <param name="YomiGivenName" type="xs:string" style="plain" path="/YomiGivenName">
              <doc title="The phonetic Japanese given name (first name) of the contact" />
            </param>
            <param name="YomiSurname" type="xs:string" style="plain" path="/YomiSurname">
              <doc title="The phonetic Japanese surname (last name) of the contact" />
            </param>
            <param name="Categories" type="service:Contact_Categories_def" style="plain" path="/Categories">
              <doc title="The categories associated with the contact" />
            </param>
            <param name="ChangeKey" type="xs:string" style="plain" path="/ChangeKey">
              <doc title="Identifies the version of the event object" />
            </param>
            <param name="DateTimeCreated" type="service:Contact_DateTimeCreated_def" style="plain" path="/DateTimeCreated">
              <doc title="The time the contact was created" />
            </param>
            <param name="DateTimeLastModified" type="service:Contact_DateTimeLastModified_def" style="plain" path="/DateTimeLastModified">
              <doc title="The time the contact was modified" />
            </param>
          </representation>
        </request>
        <response>
          <representation mediaType="application/json" element="service:Contact" />
        </response>
      </method>
    </resource>
    <resource path="/{connectionId}/datasets">
      <param name="connectionId" style="template" type="xs:string" required="true" />
      <method siena:requiresAuthentication="true" name="GET" id="GetDataSets">
        <doc title="Get datasets&#xA;This operation gets Contacts or Calendars" />
        <request />
        <response>
          <representation mediaType="application/json" element="service:DataSetsList" />
        </response>
      </method>
    </resource>
    <resource path="/RecordResponse">
      <method siena:requiresAuthentication="true" name="GET" id="ReceiveResponseGet">
        <doc title="Receives response from user&#xA;This operation gets a response from the user." />
        <request>
          <param name="state" style="query" type="xs:string" required="true">
            <doc title="callback state" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="xs:string" />
        </response>
      </method>
      <method siena:requiresAuthentication="true" name="POST" id="ReceiveResponsePost">
        <doc title="Receives response from user&#xA;This operation gets a response from the user." />
        <request>
          <param name="state" style="query" type="xs:string" required="true">
            <doc title="callback state" />
          </param>
        </request>
        <response>
          <representation mediaType="application/json" element="xs:string" />
        </response>
      </method>
    </resource>
  </resources>
  <siena:authenticationProviders>
    <siena:connectionProvider id="PowerAppAuth" siena:connectionProviderId="office365" />
  </siena:authenticationProviders>
  <siena:template>
    <siena:variable name="connectionId">
      <siena:modifyParams style="template" name="connectionId" attribute="fixed" />
    </siena:variable>
  </siena:template>
</application>